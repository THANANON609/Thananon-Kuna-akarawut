{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Project\\\\MAIN\\\\src\\\\XY.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport DropdownTreeSelect from 'react-dropdown-tree-select';\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css';\nimport FileExplorerTheme from 'react-sortable-tree-theme-file-explorer';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Row, Col } from 'antd';\nimport './index.css';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nimport { AwesomeButton } from 'react-awesome-button';\nimport \"react-awesome-button/dist/styles.css\";\nconst {\n  Header,\n  Content,\n  Footer,\n  Sider\n} = Layout;\nconst {\n  SubMenu\n} = Menu;\n\nclass Data_Set extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.click_handle = node => {\n      this.setState({\n        nodeClicked: node\n      });\n    };\n\n    this.get_data_all = async () => {\n      const path = \"http://localhost:9000/Send_data/\";\n      await axios({\n        method: \"get\",\n        url: path\n      }).then(res => this.setState({\n        result: res.data\n      }));\n    };\n\n    this.get_button = async (path) => {\n      const b_path = \"http://localhost:9000/Send_data/C:/Users/User/Desktop/\" + path;\n      await axios({\n        method: \"get\",\n        url: b_path\n      }).then(res => {\n        this.setState({\n          button: res.data\n        });\n      }).then(() => this.setState({\n        button_check: true\n      }));\n    };\n\n    this.set_button = () => {\n      if (this.state.button_check) {\n        let arr = [];\n\n        for (const b_name of this.state.button) {\n          if (b_name.indexOf('.') == -1) {\n            let temp = /*#__PURE__*/React.createElement(AwesomeButton, {\n              type: \"secondary\",\n              size: \"medium\",\n              onPress: () => {\n                this.get_button(this.state.current_path + \"/\" + b_name).then(() => {\n                  this.setState({\n                    current_path: this.state.current_path + \"/\" + b_name\n                  });\n                });\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 32\n              }\n            }, b_name);\n            arr.push(temp);\n          } else if (b_name.indexOf('.') != -1) {\n            let temp = /*#__PURE__*/React.createElement(AwesomeButton, {\n              type: \"secondary\",\n              size: \"medium\",\n              onPress: () => {\n                this.setState({\n                  current_path: this.state.current_path + \"/\" + b_name\n                });\n                axios({\n                  method: 'get',\n                  url: \"http://localhost:9000/Send_data/image\",\n                  params: {\n                    path: \"C:/Users/User/Desktop/\" + this.state.current_path + \"/\" + b_name //re\n\n                  }\n                }).then(res => this.setState({\n                  image: res.data\n                })).then(() => this.setState({\n                  image_check: true\n                }));\n                console.log(\"C:/Users/User/Desktop\" + this.state.current_path);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 32\n              }\n            }, b_name);\n            arr.push(temp);\n          }\n        }\n\n        return arr;\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.set_image = () => {\n      if (this.state.image_check) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: \"70%\",\n            flexDirection: \"vertical\",\n            backgroundColor: \"white\",\n            marginTop: \"50px\",\n            border: \"30px solid white\",\n            marginBottom: \"50px\",\n            marginTop: \"50px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"data:image/png[jpg];base64,\" + this.state.image.toString(),\n          style: {\n            height: 500\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }\n        })));\n      }\n    };\n\n    this.state = {\n      Tree_high: 200,\n      Tree_name: \"\",\n      result: null,\n      nodeClicked: false,\n      image: \"\",\n      image_check: false,\n      current_path: \"xxx\",\n      button: null,\n      button_check: false\n    };\n    this.get_data_all();\n  }\n\n  render() {\n    if (this.state.result != null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: this.state.Tree_high\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SortableTree, {\n        treeData: this.state.result,\n        onChange: treeData => this.setState({\n          result: treeData\n        }),\n        canDrag: ({\n          node\n        }) => false,\n        canDrop: () => false,\n        generateNodeProps: rowInfo => {\n          const {\n            node\n          } = rowInfo;\n          return {\n            onClick: () => {\n              if (!node.expanded) {\n                if (node.children != null) {\n                  this.setState({\n                    Tree_high: this.state.Tree_high += node.children.length * 60\n                  });\n                }\n\n                this.setState({\n                  image_check: false\n                });\n                this.setState({\n                  current_path: node.subtitle.toString()\n                });\n              } else {\n                if (node.children != null) {\n                  this.setState({\n                    Tree_high: this.state.Tree_high -= node.children.length * 60\n                  });\n                }\n\n                this.setState({\n                  image_check: false\n                });\n                this.setState({\n                  current_path: node.subtitle.toString()\n                });\n              }\n            },\n            onDoubleClick: () => {\n              // console.log(node.subtitle)\n              this.click_handle(node);\n              console.log(\"C:/Users/User/Desktop\" + node.subtitle.toString());\n              axios({\n                method: 'get',\n                url: \"http://localhost:9000/Send_data/image\",\n                params: {\n                  path: \"C:/Users/User/Desktop/\" + node.subtitle.toString()\n                }\n              }).then(res => this.setState({\n                image: res.data\n              })).then(() => {\n                if (this.state.image == \"Not File!!!\") {\n                  this.setState({\n                    image_check: false\n                  });\n                  this.setState({\n                    current_path: node.subtitle.toString()\n                  });\n                  this.get_button(node.subtitle.toString());\n                } else {\n                  this.setState({\n                    image_check: true\n                  });\n                  this.setState({\n                    current_path: node.subtitle.toString()\n                  });\n                }\n              });\n            },\n            style: node === this.state.nodeClicked && {\n              color: \"red\",\n              border: \"5px solid red\"\n            }\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      })), this.set_image());\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n}\n\nexport default Data_Set;","map":{"version":3,"sources":["C:/Users/User/Project/MAIN/src/XY.js"],"names":["React","axios","DropdownTreeSelect","SortableTree","FileExplorerTheme","Row","Col","Layout","Menu","Breadcrumb","UserOutlined","LaptopOutlined","NotificationOutlined","AwesomeButton","Header","Content","Footer","Sider","SubMenu","Data_Set","Component","constructor","props","click_handle","node","setState","nodeClicked","get_data_all","path","method","url","then","res","result","data","get_button","b_path","button","button_check","set_button","state","arr","b_name","indexOf","temp","current_path","push","params","image","image_check","console","log","set_image","display","justifyContent","alignItems","height","flexDirection","backgroundColor","marginTop","border","marginBottom","toString","Tree_high","Tree_name","render","treeData","rowInfo","onClick","expanded","children","length","subtitle","onDoubleClick","style","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport DropdownTreeSelect from 'react-dropdown-tree-select'\r\nimport SortableTree from 'react-sortable-tree';\r\nimport 'react-sortable-tree/style.css';\r\nimport FileExplorerTheme from 'react-sortable-tree-theme-file-explorer';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Row, Col } from 'antd';\r\nimport './index.css';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport { AwesomeButton} from 'react-awesome-button';\r\nimport \"react-awesome-button/dist/styles.css\";\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass Data_Set extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            Tree_high : 200,\r\n            Tree_name : \"\",\r\n            result: null,\r\n            nodeClicked : false,\r\n            image: \"\",\r\n            image_check :false,\r\n            current_path:\"xxx\",\r\n            button :null,\r\n            button_check :false\r\n        }\r\n        this.get_data_all();\r\n    }\r\n    click_handle =(node)=>\r\n    {\r\n        this.setState({nodeClicked: node})\r\n    }\r\n    get_data_all = async()=>\r\n    {\r\n        const path = \"http://localhost:9000/Send_data/\";\r\n        await axios(\r\n            {\r\n                method: \"get\",\r\n                url: path,  \r\n            }\r\n        ).then((res)=>this.setState({result:res.data}));\r\n    }\r\n    get_button= async(path) =>\r\n    {\r\n        const b_path = \"http://localhost:9000/Send_data/C:/Users/User/Desktop/\"+path;\r\n        await axios(\r\n            {\r\n                method: \"get\",\r\n                url: b_path,  \r\n            }\r\n        ).then((res)=>{this.setState({button:res.data})\r\n        }).then(()=>this.setState({button_check:true}));\r\n    }\r\n    set_button = () =>\r\n    {\r\n        if(this.state.button_check)\r\n        {\r\n            let arr = [];\r\n            for(const b_name of this.state.button)\r\n            {\r\n                if(b_name.indexOf('.')==-1)\r\n                {\r\n                    let temp = <AwesomeButton type=\"secondary\" size=\"medium\" onPress={() =>{\r\n                    this.get_button(this.state.current_path+\"/\"+b_name).then(()=>{\r\n                        this.setState({current_path:this.state.current_path+\"/\"+b_name})})\r\n                    }}>{b_name}</AwesomeButton>; \r\n                    arr.push(temp);\r\n                }\r\n                else if(b_name.indexOf('.')!=-1)\r\n                {\r\n                    let temp = <AwesomeButton type=\"secondary\" size=\"medium\" onPress={() =>{\r\n                            this.setState({current_path:this.state.current_path+\"/\"+b_name})\r\n                            axios(\r\n                                {\r\n                                    method :'get',\r\n                                    url: \"http://localhost:9000/Send_data/image\",\r\n                                    params:\r\n                                    {\r\n                                        path :\"C:/Users/User/Desktop/\"+this.state.current_path+\"/\"+b_name//re\r\n                                    }\r\n                                }).then((res) =>this.setState({image:res.data})).then(()=>this.setState({image_check:true}))\r\n                            console.log(\"C:/Users/User/Desktop\"+this.state.current_path);\r\n                    }}>{b_name}</AwesomeButton>; \r\n                    arr.push(temp);\r\n                }\r\n            }\r\n            return(arr);\r\n        }\r\n        else\r\n        {\r\n            return(<div>\r\n                \r\n            </div>)\r\n        }\r\n    }\r\n    set_image = ()=>\r\n    {\r\n        if(this.state.image_check)\r\n        {\r\n            return(\r\n                <div>\r\n                    <div style={{display: 'flex',  justifyContent:'center', alignItems:'center',height:\"70%\",flexDirection: \"vertical\",backgroundColor :\"white\",marginTop:\"50px\",border :\"30px solid white\",marginBottom:\"50px\",marginTop:\"50px\"}}>\r\n                        <img src={\"data:image/png[jpg];base64,\"+this.state.image.toString()} style = {{height:500}}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        if(this.state.result!=null)\r\n        {\r\n            return(\r\n            <div>\r\n                \r\n\r\n                <div style={{height: this.state.Tree_high}}> \r\n                        <SortableTree\r\n                            treeData={this.state.result}\r\n                            onChange={treeData => this.setState({result:treeData })}\r\n                            canDrag={({ node }) => false}\r\n                            canDrop={() => false}\r\n                            generateNodeProps={(rowInfo) => {\r\n                            const { node } = rowInfo;\r\n                            return { \r\n                                onClick:()=>{\r\n                                    if(!node.expanded){\r\n                                        if(node.children!=null)\r\n                                        {this.setState({Tree_high:this.state.Tree_high+=(node.children.length*60)})}\r\n                                        this.setState({image_check:false})\r\n                                        this.setState({current_path:node.subtitle.toString()})\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        if(node.children!=null)\r\n                                        {this.setState({Tree_high:this.state.Tree_high-=(node.children.length*60)})}\r\n                                        this.setState({image_check:false})\r\n                                        this.setState({current_path:node.subtitle.toString()})\r\n                                    }\r\n                                \r\n                                },\r\n                                onDoubleClick: () => {\r\n                                   // console.log(node.subtitle)\r\n                                    this.click_handle(node)\r\n                                    console.log(\"C:/Users/User/Desktop\"+node.subtitle.toString())\r\n                                    axios(\r\n                                    {\r\n                                        method :'get',\r\n                                        url: \"http://localhost:9000/Send_data/image\",\r\n                                        params:\r\n                                        {\r\n                                            path :\"C:/Users/User/Desktop/\"+node.subtitle.toString()\r\n                                        }\r\n                                    }).then((res) =>this.setState({image:res.data})).then(()=>{\r\n                                                if(this.state.image == \"Not File!!!\")\r\n                                                {\r\n                                                    this.setState({image_check:false})\r\n                                                    this.setState({current_path:node.subtitle.toString()})\r\n                                                    this.get_button(node.subtitle.toString());\r\n                                                }\r\n                                                else\r\n                                                {\r\n                                                    this.setState({image_check:true})\r\n                                                    this.setState({current_path:node.subtitle.toString()})\r\n                                                }\r\n                                            }\r\n                                        );\r\n                                    },\r\n                                        style: node === this.state.nodeClicked && {\r\n                                        color : \"red\",\r\n                                        border: \"5px solid red\"}\r\n                                        \r\n                                    };\r\n                            }}/>\r\n                    </div>\r\n                    {this.set_image()}\r\n                \r\n            </div>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <div>\r\n                    <h2></h2>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Data_Set;"]},"metadata":{},"sourceType":"module"}