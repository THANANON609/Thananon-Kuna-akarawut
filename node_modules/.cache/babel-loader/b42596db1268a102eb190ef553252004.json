{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Project\\\\MAIN\\\\src\\\\Data_setting.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport DropdownTreeSelect from 'react-dropdown-tree-select';\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css';\nimport FileExplorerTheme from 'react-sortable-tree-theme-file-explorer';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Row, Col } from 'antd';\nimport './index.css';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nconst {\n  Header,\n  Content,\n  Footer,\n  Sider\n} = Layout;\nconst {\n  SubMenu\n} = Menu;\n\nclass Data_Set2 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.click_handle = node => {\n      this.setState({\n        nodeClicked: node\n      });\n    };\n\n    this.get_data_all = async () => {\n      const path = \"http://localhost:9000/Send_data/\"; //const path = \"null\";\n\n      await axios({\n        method: \"get\",\n        url: path\n      }).then(res => this.setState({\n        result: res.data\n      }));\n    };\n\n    this.set_image = () => {\n      if (this.state.image_check) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: \"90%\",\n            flexDirection: \"vertical\",\n            fontSize: 18,\n            backgroundColor: \"white\",\n            marginTop: '20px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 22\n          }\n        }, this.state.current_path), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: \"70%\",\n            flexDirection: \"vertical\",\n            backgroundColor: \"white\",\n            marginTop: \"50px\",\n            border: \"30px solid white\",\n            marginBottom: \"50px\",\n            marginTop: \"50px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"data:image/png[jpg];base64,\" + this.state.image.toString(),\n          style: {\n            height: 500\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }\n        })));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            height: \"90%\",\n            flexDirection: \"vertical\",\n            fontSize: 18,\n            backgroundColor: \"white\",\n            marginTop: '20px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }\n        }, this.state.current_path));\n      }\n    };\n\n    this.state = {\n      Tree_name: \"\",\n      result: null,\n      nodeClicked: false,\n      image: \"\",\n      image_check: false,\n      current_path: \"CODE\",\n      button: null,\n      button_check: false\n    };\n    this.get_data_all();\n  }\n\n  render() {\n    if (this.state.result != null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        push: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, this.set_image()), /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        pull: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: \"90vh\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(SortableTree, {\n        treeData: this.state.result,\n        onChange: treeData => this.setState({\n          result: treeData\n        }),\n        canDrag: ({\n          node\n        }) => false,\n        canDrop: () => false,\n        generateNodeProps: rowInfo => {\n          const {\n            node\n          } = rowInfo;\n          return {\n            onDoubleClick: () => {\n              console.log(node.subtitle);\n              this.click_handle(node);\n              console.log(\"C:/\" + node.subtitle.toString());\n              axios({\n                method: 'get',\n                url: \"http://localhost:9000/Send_data/image\",\n                params: {\n                  path: \"C:/CODE/XXX\" + node.subtitle.toString()\n                }\n              }).then(res => this.setState({\n                image: res.data\n              })).then(() => {\n                if (this.state.image == \"Not File!!!\") {\n                  this.setState({\n                    image_check: false\n                  });\n                  this.setState({\n                    current_path: node.subtitle.toString()\n                  });\n                } else {\n                  this.setState({\n                    image_check: true\n                  });\n                  this.setState({\n                    current_path: node.subtitle.toString()\n                  });\n                }\n              });\n            },\n            style: node === this.state.nodeClicked && {\n              color: \"cyan\",\n              border: \"5px solid red\"\n            }\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, \"Now Loading\"));\n    }\n  }\n\n}\n\nexport default Data_Set2;","map":{"version":3,"sources":["C:/Users/User/Project/MAIN/src/Data_setting.js"],"names":["React","axios","DropdownTreeSelect","SortableTree","FileExplorerTheme","Row","Col","Layout","Menu","Breadcrumb","UserOutlined","LaptopOutlined","NotificationOutlined","Header","Content","Footer","Sider","SubMenu","Data_Set2","Component","constructor","props","click_handle","node","setState","nodeClicked","get_data_all","path","method","url","then","res","result","data","set_image","state","image_check","display","justifyContent","alignItems","height","flexDirection","fontSize","backgroundColor","marginTop","current_path","border","marginBottom","image","toString","Tree_name","button","button_check","render","treeData","rowInfo","onDoubleClick","console","log","subtitle","params","style","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport DropdownTreeSelect from 'react-dropdown-tree-select'\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css';\nimport FileExplorerTheme from 'react-sortable-tree-theme-file-explorer';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Row, Col } from 'antd';\nimport './index.css';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass Data_Set2 extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state =\n        {\n            Tree_name : \"\",\n            result: null,\n            nodeClicked : false,\n            image: \"\",\n            image_check :false,\n            current_path:\"CODE\",\n            button :null,\n            button_check :false\n        }\n        this.get_data_all();\n    }\n    click_handle =(node)=>\n    {\n        this.setState({nodeClicked: node})\n    }\n    get_data_all = async()=>\n    {\n        const path = \"http://localhost:9000/Send_data/\";\n        //const path = \"null\";\n        await axios(\n            {\n                method: \"get\",\n                url: path,  \n            }\n        ).then((res)=>this.setState({result:res.data}));\n    }\n    /*set_button = () =>\n    {\n        if(this.state.button_check)\n        {\n            let arr = [];\n            for(const b_name of this.state.button)\n            {\n                if(b_name.indexOf('.')==-1)\n                {\n                    let temp = <AwesomeButton type=\"secondary\" size=\"medium\" onPress={() =>{\n                    this.get_button(this.state.current_path+\"/\"+b_name).then(()=>{\n                        this.setState({current_path:this.state.current_path+\"/\"+b_name})})\n                    }}>{b_name}</AwesomeButton>; \n                    arr.push(temp);\n                }\n                else if(b_name.indexOf('.')!=-1)\n                {\n                    let temp = <AwesomeButton type=\"secondary\" size=\"medium\" onPress={() =>{\n                            this.setState({current_path:this.state.current_path+\"/\"+b_name})\n                            axios(\n                                {\n                                    method :'get',\n                                    url: \"http://localhost:9000/Send_data/image\",\n                                    params:\n                                    {\n                                        path :\"C:\"+this.state.current_path+\"/\"+b_name\n                                    }\n                                }).then((res) =>this.setState({image:res.data})).then(()=>this.setState({image_check:true}))\n                            console.log(\"C:/\"+this.state.current_path);\n                    }}>{b_name}</AwesomeButton>; \n                    arr.push(temp);\n                }\n            }\n            return(arr);\n        }\n        else\n        {\n            return(<div>\n                \n            </div>)\n        }\n    }*/\n    set_image = ()=>\n    {\n        if(this.state.image_check)\n        {\n            return(\n                <div>\n                     <div style={{display: 'flex',justifyContent:'center', alignItems:'center',height:\"90%\",flexDirection: \"vertical\",fontSize: 18 ,backgroundColor:\"white\", marginTop :'20px'}}>\n                        {this.state.current_path}\n                    </div>\n                    <div style={{display: 'flex',  justifyContent:'center', alignItems:'center',height:\"70%\",flexDirection: \"vertical\",backgroundColor :\"white\",marginTop:\"50px\",border :\"30px solid white\",marginBottom:\"50px\",marginTop:\"50px\"}}>\n                        <img src={\"data:image/png[jpg];base64,\"+this.state.image.toString()} style = {{height:500}}/>\n                    </div>\n                </div>\n            )\n        }\n        else\n        {\n            return(\n            <div>\n                <div style={{display: 'flex',justifyContent:'center',height:\"90%\",flexDirection: \"vertical\",fontSize: 18 ,backgroundColor:\"white\", marginTop :'20px'}}>\n                    {this.state.current_path}\n                </div>\n            </div>\n            )\n        }\n    }\n    render()\n    {\n        if(this.state.result!=null)\n        {\n            return(\n            <div>\n                <Row>\n                    <Col span={16} push={8}>\n                    {this.set_image()}\n                    </Col>\n                    <Col span={8} pull={16}>\n                    <div style={{height: \"90vh\"}}>\n                        <SortableTree\n                            treeData={this.state.result}\n                            onChange={treeData => this.setState({result:treeData })}\n                            canDrag={({ node }) => false}\n                            canDrop={() => false}\n                            generateNodeProps={(rowInfo) => {\n                            const { node } = rowInfo;\n                            return { \n                                onDoubleClick: () => {\n                                    console.log(node.subtitle)\n                                    this.click_handle(node)\n                                    console.log(\"C:/\"+node.subtitle.toString())\n                                    axios(\n                                    {\n                                        method :'get',\n                                        url: \"http://localhost:9000/Send_data/image\",\n                                        params:\n                                        {\n                                            path :\"C:/CODE/XXX\"+node.subtitle.toString()\n                                        }\n                                    }).then((res) =>this.setState({image:res.data})).then(()=>{\n                                                if(this.state.image == \"Not File!!!\")\n                                                {\n                                                    this.setState({image_check:false})\n                                                    this.setState({current_path:node.subtitle.toString()})\n                                                   \n                                                }\n                                                else\n                                                {\n                                                    this.setState({image_check:true})\n                                                    this.setState({current_path:node.subtitle.toString()})\n                                                }\n                                            }\n                                        );\n                                    },\n                                        style: node === this.state.nodeClicked && {\n                                        color : \"cyan\",\n                                        border: \"5px solid red\"}\n                                    };\n                            }}/>\n                    </div>\n                    </Col>\n                </Row>\n            </div>\n            )\n        }\n        else\n        {\n            return(\n                <div>\n                    <h2>\n                        Now Loading\n                    </h2>\n                </div>\n            )\n        }\n    }\n}\nexport default Data_Set2;"]},"metadata":{},"sourceType":"module"}