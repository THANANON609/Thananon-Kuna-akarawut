{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Project\\\\MAIN\\\\src\\\\Candle_Chart.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport * as moment from \"moment\";\nimport ApexCharts from 'apexcharts';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Menu, Dropdown, Button, message, Tooltip } from 'antd';\nimport { DownOutlined, UserOutlined } from '@ant-design/icons';\n\nclass Candle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMenuClick = e => {\n      console.log(e);\n\n      if (e.key == \"1\") {\n        this.get_data_1HR();\n        this.setState({\n          time: \"1 HOUR\"\n        });\n      } else if (e.key == \"2\") {\n        this.get_data_6HR();\n        this.setState({\n          time: \"6 HOUR\"\n        });\n      } else if (e.key == \"3\") {\n        this.get_data_24HR();\n        this.setState({\n          time: \"24 HOUR\"\n        });\n      } else if (e.key == \"4\") {\n        this.get_data_3DAY();\n        this.setState({\n          time: \"3 DAYS\"\n        });\n      } else if (e.key == \"5\") {\n        this.get_data_1W();\n        this.setState({\n          time: \"1 WEEK\"\n        });\n      }\n    };\n\n    this.get_data_1HR = async () => {\n      await axios({\n        method: \"get\",\n        url: \"http://localhost:9000/Send_data/candle_data\"\n      }).then(res => {\n        var data = [];\n\n        for (let i_data of res.data) {\n          var date_temp = new Date();\n          date_temp.setFullYear(parseInt(i_data.x.date[0]));\n          date_temp.setMonth(parseInt(i_data.x.date[1]) - 1);\n          date_temp.setHours(parseInt(i_data.x.hr[0]));\n          date_temp.setMinutes(parseInt(i_data.x.hr[1]));\n          date_temp.setDate(parseInt(i_data.x.date[2])); //console.log(date_temp);\n\n          let temp = {\n            x: date_temp,\n            y: [i_data.y[0], i_data.y[1], i_data.y[2], i_data.y[3]]\n          };\n          data.push(temp);\n        } //console.log(data)\n\n\n        let c_temp = [{\n          data: data\n        }]; //console.log(c_temp);\n\n        this.setState({\n          series: c_temp\n        });\n      });\n    };\n\n    this.get_data_6HR = async () => {\n      await axios({\n        method: \"get\",\n        url: \"http://localhost:9000/Send_data/candle_data\"\n      }).then(res => {\n        let data = [];\n        let count = 1;\n        var open;\n        var high;\n        var low;\n\n        for (let i_data of res.data) {\n          if (count == 6) {\n            count = 0; //console.log(i_data.x.hr);\n\n            let date_temp = new Date();\n            date_temp.setFullYear(parseInt(i_data.x.date[0]));\n            date_temp.setMonth(parseInt(i_data.x.date[1]) - 1);\n            date_temp.setDate(parseInt(i_data.x.date[2]));\n            date_temp.setHours(parseInt(i_data.x.hr[0]));\n            date_temp.setMinutes(parseInt(i_data.x.hr[1]));\n            let temp = {\n              x: date_temp,\n              y: [open, high, low, i_data.y[3]]\n            };\n            data.push(temp);\n          } else if (count == 1) {\n            open = i_data.y[0];\n            low = i_data.y[2];\n            high = i_data.y[1];\n          } else {\n            if (i_data.y[1] > high) {\n              high = i_data.y[1];\n            }\n\n            if (i_data.y[2] < low) {\n              low = i_data.y[2];\n            }\n          }\n\n          count++;\n        }\n\n        let c_temp = [{\n          data: data\n        }];\n        this.setState({\n          series: c_temp\n        });\n      });\n    };\n\n    this.get_data_24HR = async () => {\n      await axios({\n        method: \"get\",\n        url: \"http://localhost:9000/Send_data/candle_data\"\n      }).then(res => {\n        let data = [];\n        let count = 1;\n        var open;\n        var high;\n        var low;\n\n        for (let i_data of res.data) {\n          /*if(count == 23)\n          {\n            count = 0;\n            //console.log(i_data.x.hr);\n            let date_temp = new Date();\n            date_temp.setFullYear(parseInt(i_data.x.date[0]));\n            date_temp.setMonth(parseInt(i_data.x.date[1])-1);\n            date_temp.setDate(parseInt(i_data.x.date[2]));\n            date_temp.setHours(parseInt(i_data.x.hr[0]));\n            date_temp.setMinutes(parseInt(i_data.x.hr[1]))\n            let temp = {\n              x: date_temp,\n              y: [open,high,low,i_data.y[3]]\n            }\n            data.push(temp);\n          }\n          else if(count == 1)\n          {\n            open = i_data.y[0];\n            low = i_data.y[2];\n            high = i_data.y[1];\n          }\n          else\n          {\n            if(i_data.y[1]>high)\n            {\n              high = i_data.y[1];\n            }\n            if(i_data.y[2]<low)\n            {\n              low = i_data.y[2];\n            }\n          }\n          count++;*/\n          if (i_data.x.hr[0] == \"23\") {\n            //console.log(i_data.x.hr ,\"day\");\n            let date_temp = new Date();\n            date_temp.setFullYear(parseInt(i_data.x.date[0]));\n            date_temp.setMonth(parseInt(i_data.x.date[1]) - 1);\n            date_temp.setDate(parseInt(i_data.x.date[2]));\n            date_temp.setHours(parseInt(i_data.x.hr[0]));\n            date_temp.setMinutes(parseInt(i_data.x.hr[1]));\n            let temp = {\n              x: date_temp,\n              y: [open, high, low, i_data.y[3]]\n            };\n            data.push(temp);\n          } else if (i_data.x.hr[0] == \"1\") {\n            open = i_data.y[0];\n            low = i_data.y[2];\n            high = i_data.y[1];\n          } else {\n            if (i_data.y[1] > high) {\n              high = i_data.y[1];\n            }\n\n            if (i_data.y[2] < low) {\n              low = i_data.y[2];\n            }\n          }\n        }\n\n        let c_temp = [{\n          data: data\n        }];\n        this.setState({\n          series: c_temp\n        });\n      });\n    };\n\n    this.get_data_3DAY = async () => {\n      await axios({\n        method: \"get\",\n        url: \"http://localhost:9000/Send_data/candle_data\"\n      }).then(res => {\n        let data = [];\n        var open;\n        var high;\n        var low;\n        let c_day = 0;\n\n        for (let i_data of res.data) {\n          if (i_data.x.hr[0] == \"23\") {\n            //console.log(i_data.x.hr);\n            let date_temp = new Date();\n            date_temp.setFullYear(parseInt(i_data.x.date[0]));\n            date_temp.setMonth(parseInt(i_data.x.date[1]) - 1);\n            date_temp.setDate(parseInt(i_data.x.date[2]));\n            date_temp.setHours(parseInt(i_data.x.hr[0]));\n            date_temp.setMinutes(parseInt(i_data.x.hr[1]));\n            let temp = {\n              x: date_temp,\n              y: [open, high, low, i_data.y[3]]\n            };\n            c_day++;\n\n            if (c_day == 3) {\n              data.push(temp);\n              c_day = 0;\n            }\n          } else if (i_data.x.hr[0] == \"1\") {\n            open = i_data.y[0];\n            low = i_data.y[2];\n            high = i_data.y[1];\n          } else {\n            if (i_data.y[1] > high) {\n              high = i_data.y[1];\n            }\n\n            if (i_data.y[2] < low) {\n              low = i_data.y[2];\n            }\n          }\n        }\n\n        let c_temp = [{\n          data: data\n        }];\n        this.setState({\n          series: c_temp\n        });\n      });\n    };\n\n    this.get_data_1W = async () => {\n      await axios({\n        method: \"get\",\n        url: \"http://localhost:9000/Send_data/candle_data\"\n      }).then(res => {\n        let data = [];\n        var open;\n        var high;\n        var low;\n        let c_day = 0;\n\n        for (let i_data of res.data) {\n          if (i_data.x.hr[0] == \"23\") {\n            //console.log(i_data.x.hr);\n            let date_temp = new Date();\n            date_temp.setFullYear(parseInt(i_data.x.date[0]));\n            date_temp.setMonth(parseInt(i_data.x.date[1]) - 1);\n            date_temp.setDate(parseInt(i_data.x.date[2]));\n            date_temp.setHours(parseInt(i_data.x.hr[0]));\n            date_temp.setMinutes(parseInt(i_data.x.hr[1]));\n            let temp = {\n              x: date_temp,\n              y: [open, high, low, i_data.y[3]]\n            };\n            c_day++;\n\n            if (c_day == 5) {\n              data.push(temp);\n              c_day = 0;\n            }\n          } else if (i_data.x.hr[0] == \"1\" && c_day == 0) {\n            open = i_data.y[0];\n            low = i_data.y[2];\n            high = i_data.y[1];\n          } else {\n            if (i_data.y[1] > high) {\n              high = i_data.y[1];\n            }\n\n            if (i_data.y[2] < low) {\n              low = i_data.y[2];\n            }\n          }\n        }\n\n        let c_temp = [{\n          data: data\n        }];\n        this.setState({\n          series: c_temp\n        });\n      });\n    };\n\n    this.state = {\n      time: \"\",\n      series: [{\n        data: []\n      }],\n      options: {\n        chart: {\n          type: 'candlestick',\n          height: 500\n        },\n        title: {\n          text: 'CandleStick Chart',\n          align: 'center'\n        },\n        noData: {\n          text: 'Please Wait for you chart....'\n        },\n        xaxis: {\n          type: 'category',\n          labels: {\n            formatter: function (val) {\n              return moment(val).format(\"DD-MM-YYYY HH:mm\");\n            },\n            style: {\n              colors: [],\n              fontSize: '12px',\n              fontFamily: 'Helvetica, Arial, sans-serif',\n              fontWeight: 400,\n              cssClass: 'apexcharts-xaxis-label'\n            }\n          }\n        },\n        yaxis: {\n          tickAmount: 6,\n          min: 16,\n          max: 30,\n          tooltip: {\n            enabled: true\n          }\n        },\n        plotOptions: {\n          candlestick: {\n            wick: {\n              useFillColor: true\n            }\n          }\n        }\n      }\n    }; //this.get_data();\n  }\n\n  render() {\n    const menu = /*#__PURE__*/React.createElement(Menu, {\n      onClick: this.handleMenuClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"1\",\n      icon: /*#__PURE__*/React.createElement(UserOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 36\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }\n    }, \"1 HOUR\"), /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"2\",\n      icon: /*#__PURE__*/React.createElement(UserOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 36\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }\n    }, \"6 HOUR\"), /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"3\",\n      icon: /*#__PURE__*/React.createElement(UserOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 36\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }\n    }, \"24 HOUR\"), /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"4\",\n      icon: /*#__PURE__*/React.createElement(UserOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }\n    }, \"3 DAYS\"), /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"5\",\n      icon: /*#__PURE__*/React.createElement(UserOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 36\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }\n    }, \"1 WEEK\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: \"vertical\",\n        fontSize: 30,\n        backgroundColor: \"white\",\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }\n    }, \"Data: \", this.state.time), /*#__PURE__*/React.createElement(Dropdown, {\n      overlay: menu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 19\n      }\n    }, \"Time \", /*#__PURE__*/React.createElement(DownOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 26\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"candlestick\",\n      height: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default Candle;","map":{"version":3,"sources":["C:/Users/User/Project/MAIN/src/Candle_Chart.js"],"names":["React","axios","Chart","moment","ApexCharts","Menu","Dropdown","Button","message","Tooltip","DownOutlined","UserOutlined","Candle","Component","constructor","props","handleMenuClick","e","console","log","key","get_data_1HR","setState","time","get_data_6HR","get_data_24HR","get_data_3DAY","get_data_1W","method","url","then","res","data","i_data","date_temp","Date","setFullYear","parseInt","x","date","setMonth","setHours","hr","setMinutes","setDate","temp","y","push","c_temp","series","count","open","high","low","c_day","state","options","chart","type","height","title","text","align","noData","xaxis","labels","formatter","val","format","style","colors","fontSize","fontFamily","fontWeight","cssClass","yaxis","tickAmount","min","max","tooltip","enabled","plotOptions","candlestick","wick","useFillColor","render","menu","display","justifyContent","alignItems","flexDirection","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport * as moment from \"moment\";\nimport ApexCharts from 'apexcharts';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Menu, Dropdown, Button, message, Tooltip } from 'antd';\nimport { DownOutlined, UserOutlined } from '@ant-design/icons';\n\nclass Candle extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = \n        {\n            time:\"\",\n            series: [{\n                data:[]\n              }],\n              options: {\n                chart: {\n                  type: 'candlestick',\n                  height: 500,\n                },\n                title: {\n                  text: 'CandleStick Chart',\n                  align: 'center'\n                },\n                noData:{\n                  text: 'Please Wait for you chart....'\n                },\n                xaxis: {\n                  type: 'category',\n                  labels: {\n                    formatter: function(val) {\n                      return moment(val).format(\"DD-MM-YYYY HH:mm\");\n                    },\n                    style: {\n                      colors: [],\n                      fontSize: '12px',\n                      fontFamily: 'Helvetica, Arial, sans-serif',\n                      fontWeight: 400,\n                      cssClass: 'apexcharts-xaxis-label',\n                    }\n                  },\n                },\n                yaxis: {\n                  tickAmount: 6,\n                  min: 16,\n                  max: 30,\n                  tooltip: {\n                    enabled: true\n                  }\n                },\n                plotOptions: {\n                  candlestick: {\n                    wick: {\n                      useFillColor: true,\n                    }\n                  }\n                }\n              },\n            };\n            //this.get_data();\n    }\n    handleMenuClick =(e) => {\n      console.log(e);\n      if(e.key==\"1\")\n      {\n        this.get_data_1HR();\n        this.setState({time:\"1 HOUR\"});\n      }\n      else if(e.key == \"2\")\n      {\n        this.get_data_6HR();\n        this.setState({time:\"6 HOUR\"});\n      }\n      else if(e.key == \"3\")\n      {\n        this.get_data_24HR();\n        this.setState({time:\"24 HOUR\"});\n      }\n      else if(e.key == \"4\")\n      {\n        this.get_data_3DAY();\n        this.setState({time:\"3 DAYS\"});\n      }\n      else if(e.key == \"5\")\n      {\n        this.get_data_1W();\n        this.setState({time:\"1 WEEK\"})\n      }\n    }\n    get_data_1HR = async()=>\n    {\n        await axios(\n            {\n                method:\"get\",\n                url :\"http://localhost:9000/Send_data/candle_data\"\n            }\n        ).then((res)=>\n        {\n          var data = [];\n          for(let i_data of res.data)\n          {\n            var date_temp = new Date();\n            date_temp.setFullYear(parseInt(i_data.x.date[0]));\n            date_temp.setMonth(parseInt(i_data.x.date[1])-1);\n            date_temp.setHours(parseInt(i_data.x.hr[0]));\n            date_temp.setMinutes(parseInt(i_data.x.hr[1]))\n            date_temp.setDate(parseInt(i_data.x.date[2]));\n            //console.log(date_temp);\n            let temp = {\n              x: date_temp,\n              y: [i_data.y[0],i_data.y[1],i_data.y[2],i_data.y[3]]\n            }\n            data.push(temp);\n          }\n          //console.log(data)\n          let c_temp = [{\n            data: data\n          }]\n          //console.log(c_temp);\n          this.setState({series:c_temp})\n        })\n    }\n    get_data_6HR = async()=>\n    {\n        await axios(\n            {\n                method:\"get\",\n                url :\"http://localhost:9000/Send_data/candle_data\"\n            }\n        ).then((res)=>\n        {\n          let data = [];\n          let count = 1;\n          var open;\n          var high;\n          var low;\n          for(let i_data of res.data)\n          {\n            if(count == 6)\n            {\n              count = 0;\n              //console.log(i_data.x.hr);\n              let date_temp = new Date();\n              date_temp.setFullYear(parseInt(i_data.x.date[0]));\n              date_temp.setMonth(parseInt(i_data.x.date[1])-1);\n              date_temp.setDate(parseInt(i_data.x.date[2]));\n              date_temp.setHours(parseInt(i_data.x.hr[0]));\n              date_temp.setMinutes(parseInt(i_data.x.hr[1]))\n              let temp = {\n                x: date_temp,\n                y: [open,high,low,i_data.y[3]]\n              }\n              data.push(temp);\n            }\n            else if(count == 1)\n            {\n              open = i_data.y[0];\n              low = i_data.y[2];\n              high = i_data.y[1];\n            }\n            else\n            {\n              if(i_data.y[1]>high)\n              {\n                high = i_data.y[1];\n              }\n              if(i_data.y[2]<low)\n              {\n                low = i_data.y[2];\n              }\n            }\n            count++;\n          }\n          let c_temp = [{\n            data: data\n          }]\n          this.setState({series:c_temp})\n        })\n    }\n    get_data_24HR = async()=>\n    {\n        await axios(\n            {\n                method:\"get\",\n                url :\"http://localhost:9000/Send_data/candle_data\"\n            }\n        ).then((res)=>\n        {\n          let data = [];\n          let count = 1;\n          var open;\n          var high;\n          var low;\n          for(let i_data of res.data)\n          {\n            /*if(count == 23)\n            {\n              count = 0;\n              //console.log(i_data.x.hr);\n              let date_temp = new Date();\n              date_temp.setFullYear(parseInt(i_data.x.date[0]));\n              date_temp.setMonth(parseInt(i_data.x.date[1])-1);\n              date_temp.setDate(parseInt(i_data.x.date[2]));\n              date_temp.setHours(parseInt(i_data.x.hr[0]));\n              date_temp.setMinutes(parseInt(i_data.x.hr[1]))\n              let temp = {\n                x: date_temp,\n                y: [open,high,low,i_data.y[3]]\n              }\n              data.push(temp);\n            }\n            else if(count == 1)\n            {\n              open = i_data.y[0];\n              low = i_data.y[2];\n              high = i_data.y[1];\n            }\n            else\n            {\n              if(i_data.y[1]>high)\n              {\n                high = i_data.y[1];\n              }\n              if(i_data.y[2]<low)\n              {\n                low = i_data.y[2];\n              }\n            }\n            count++;*/\n            if(i_data.x.hr[0] == \"23\")\n            {\n              //console.log(i_data.x.hr ,\"day\");\n              let date_temp = new Date();\n              date_temp.setFullYear(parseInt(i_data.x.date[0]));\n              date_temp.setMonth(parseInt(i_data.x.date[1])-1);\n              date_temp.setDate(parseInt(i_data.x.date[2]));\n              date_temp.setHours(parseInt(i_data.x.hr[0]));\n              date_temp.setMinutes(parseInt(i_data.x.hr[1]))\n              let temp = {\n                x: date_temp,\n                y: [open,high,low,i_data.y[3]]\n              }\n              data.push(temp);\n            }\n            else if(i_data.x.hr[0] == \"1\")\n            {\n              open = i_data.y[0];\n              low = i_data.y[2];\n              high = i_data.y[1];\n            }\n            else\n            {\n              if(i_data.y[1]>high)\n              {\n                high = i_data.y[1];\n              }\n              if(i_data.y[2]<low)\n              {\n                low = i_data.y[2];\n              }\n            }\n          }\n          let c_temp = [{\n            data: data\n          }]\n          this.setState({series:c_temp})\n        })\n    }\n    get_data_3DAY = async()=>\n    {\n        await axios(\n            {\n                method:\"get\",\n                url :\"http://localhost:9000/Send_data/candle_data\"\n            }\n        ).then((res)=>\n        {\n          let data = [];\n          var open;\n          var high;\n          var low;\n          let c_day = 0;\n          for(let i_data of res.data)\n          {\n            if(i_data.x.hr[0] == \"23\")\n            {\n              //console.log(i_data.x.hr);\n              let date_temp = new Date();\n              date_temp.setFullYear(parseInt(i_data.x.date[0]));\n              date_temp.setMonth(parseInt(i_data.x.date[1])-1);\n              date_temp.setDate(parseInt(i_data.x.date[2]));\n              date_temp.setHours(parseInt(i_data.x.hr[0]));\n              date_temp.setMinutes(parseInt(i_data.x.hr[1]))\n              let temp = {\n                x: date_temp,\n                y: [open,high,low,i_data.y[3]]\n              }\n              c_day++;\n              if(c_day == 3)\n              {\n                data.push(temp);\n                c_day = 0;\n              }\n            }\n            else if(i_data.x.hr[0] == \"1\" )\n            {\n              open = i_data.y[0];\n              low = i_data.y[2];\n              high = i_data.y[1];\n            }\n            else\n            {\n              if(i_data.y[1]>high)\n              {\n                high = i_data.y[1];\n              }\n              if(i_data.y[2]<low)\n              {\n                low = i_data.y[2];\n              }\n            }\n          }\n          let c_temp = [{\n            data: data\n          }]\n          this.setState({series:c_temp})\n        })\n    }\n    get_data_1W = async()=>\n    {\n        await axios(\n            {\n                method:\"get\",\n                url :\"http://localhost:9000/Send_data/candle_data\"\n            }\n        ).then((res)=>\n        {\n          let data = [];\n          var open;\n          var high;\n          var low;\n          let c_day = 0;\n          for(let i_data of res.data)\n          {\n            if(i_data.x.hr[0] == \"23\")\n            {\n              //console.log(i_data.x.hr);\n              let date_temp = new Date();\n              date_temp.setFullYear(parseInt(i_data.x.date[0]));\n              date_temp.setMonth(parseInt(i_data.x.date[1])-1);\n              date_temp.setDate(parseInt(i_data.x.date[2]));\n              date_temp.setHours(parseInt(i_data.x.hr[0]));\n              date_temp.setMinutes(parseInt(i_data.x.hr[1]))\n              let temp = {\n                x: date_temp,\n                y: [open,high,low,i_data.y[3]]\n              }\n              c_day++;\n              if(c_day == 5)\n              {\n                data.push(temp);\n                c_day = 0;\n              }\n            }\n            else if(i_data.x.hr[0] == \"1\"&&c_day == 0)\n            {\n              open = i_data.y[0];\n              low = i_data.y[2];\n              high = i_data.y[1];\n            }\n            else\n            {\n              if(i_data.y[1]>high)\n              {\n                high = i_data.y[1];\n              }\n              if(i_data.y[2]<low)\n              {\n                low = i_data.y[2];\n              }\n            }\n          }\n          let c_temp = [{\n            data: data\n          }]\n          this.setState({series:c_temp})\n        })\n    }\n    render()\n    {\n        const menu = (\n        <Menu onClick={this.handleMenuClick}>\n          <Menu.Item key=\"1\" icon={<UserOutlined />}>\n            1 HOUR\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<UserOutlined />}>\n            6 HOUR\n          </Menu.Item>\n          <Menu.Item key=\"3\" icon={<UserOutlined />}>\n            24 HOUR\n          </Menu.Item>\n          <Menu.Item key=\"4\"  icon={<UserOutlined/>}>\n            3 DAYS\n          </Menu.Item>\n          <Menu.Item key=\"5\" icon={<UserOutlined/>}>\n            1 WEEK\n          </Menu.Item>\n        </Menu>\n         );\n        return(\n            <div>\n                <div style={{display: 'flex',justifyContent:'center', alignItems:'center',flexDirection: \"vertical\",fontSize: 30 ,backgroundColor:\"white\", marginTop :'20px'}}>\n                  Data: {this.state.time}\n                </div>\n                <Dropdown overlay={menu}>\n                  <Button>\n                    Time <DownOutlined />\n                  </Button>\n                </Dropdown>\n                <div style = {{height:\"75vh\"}}>\n                <Chart options={this.state.options} series={this.state.series} type=\"candlestick\" height={\"100%\"} />\n               </div>\n            </div>\n        )\n    }\n}\nexport default(Candle);"]},"metadata":{},"sourceType":"module"}